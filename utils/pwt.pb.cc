// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pwt.proto

#include "pwt.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace wind {
namespace utils {
namespace pwt {
        template <typename>
PROTOBUF_CONSTEXPR HeaderMessage::HeaderMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.custom_)*/ {},
      /*decltype(_impl_.typ_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.kid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.pwk_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.x5u_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct HeaderMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeaderMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeaderMessageDefaultTypeInternal() {}
  union {
    HeaderMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeaderMessageDefaultTypeInternal _HeaderMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PayloadMessage::PayloadMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.aud_vec_)*/ {},
      /*decltype(_impl_.custom_)*/ {},
      /*decltype(_impl_.sub_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.iss_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.aud_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.pbi_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.exp_)*/ nullptr,
      /*decltype(_impl_.nbf_)*/ nullptr,
      /*decltype(_impl_.iat_)*/ nullptr,
    } {}
struct PayloadMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayloadMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayloadMessageDefaultTypeInternal() {}
  union {
    PayloadMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayloadMessageDefaultTypeInternal _PayloadMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR InstanceMessage::InstanceMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.head_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.custom_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct InstanceMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstanceMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstanceMessageDefaultTypeInternal() {}
  union {
    InstanceMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstanceMessageDefaultTypeInternal _InstanceMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PWTMessage::PWTMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.header_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.payload_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.signature_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PWTMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PWTMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PWTMessageDefaultTypeInternal() {}
  union {
    PWTMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PWTMessageDefaultTypeInternal _PWTMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CustomMessage::CustomMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.key_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CustomMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMessageDefaultTypeInternal() {}
  union {
    CustomMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMessageDefaultTypeInternal _CustomMessage_default_instance_;
}  // namespace pwt
}  // namespace utils
}  // namespace wind
static ::_pb::Metadata file_level_metadata_pwt_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_pwt_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_pwt_2eproto = nullptr;
const ::uint32_t TableStruct_pwt_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::HeaderMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::HeaderMessage, _impl_.typ_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::HeaderMessage, _impl_.kid_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::HeaderMessage, _impl_.pwk_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::HeaderMessage, _impl_.x5u_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::HeaderMessage, _impl_.custom_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PayloadMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PayloadMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PayloadMessage, _impl_.sub_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PayloadMessage, _impl_.iss_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PayloadMessage, _impl_.aud_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PayloadMessage, _impl_.aud_vec_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PayloadMessage, _impl_.exp_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PayloadMessage, _impl_.nbf_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PayloadMessage, _impl_.iat_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PayloadMessage, _impl_.pbi_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PayloadMessage, _impl_.custom_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    2,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::InstanceMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::InstanceMessage, _impl_.head_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::InstanceMessage, _impl_.custom_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PWTMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PWTMessage, _impl_.header_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PWTMessage, _impl_.payload_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::PWTMessage, _impl_.signature_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::CustomMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::CustomMessage, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::wind::utils::pwt::CustomMessage, _impl_.value_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::wind::utils::pwt::HeaderMessage)},
        {13, 30, -1, sizeof(::wind::utils::pwt::PayloadMessage)},
        {39, -1, -1, sizeof(::wind::utils::pwt::InstanceMessage)},
        {49, -1, -1, sizeof(::wind::utils::pwt::PWTMessage)},
        {60, -1, -1, sizeof(::wind::utils::pwt::CustomMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::wind::utils::pwt::_HeaderMessage_default_instance_._instance,
    &::wind::utils::pwt::_PayloadMessage_default_instance_._instance,
    &::wind::utils::pwt::_InstanceMessage_default_instance_._instance,
    &::wind::utils::pwt::_PWTMessage_default_instance_._instance,
    &::wind::utils::pwt::_CustomMessage_default_instance_._instance,
};
const char descriptor_table_protodef_pwt_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\tpwt.proto\022\016wind.utils.pwt\032\037google/prot"
    "obuf/timestamp.proto\"r\n\rHeaderMessage\022\013\n"
    "\003typ\030\001 \001(\014\022\013\n\003kid\030\002 \001(\014\022\013\n\003pwk\030\003 \001(\014\022\013\n\003"
    "x5u\030\004 \001(\014\022-\n\006custom\030\005 \003(\0132\035.wind.utils.p"
    "wt.CustomMessage\"\377\001\n\016PayloadMessage\022\013\n\003s"
    "ub\030\001 \001(\014\022\013\n\003iss\030\002 \001(\014\022\013\n\003aud\030\003 \001(\014\022\017\n\007au"
    "d_vec\030\004 \003(\t\022\'\n\003exp\030\005 \001(\0132\032.google.protob"
    "uf.Timestamp\022\'\n\003nbf\030\006 \001(\0132\032.google.proto"
    "buf.Timestamp\022\'\n\003iat\030\007 \001(\0132\032.google.prot"
    "obuf.Timestamp\022\013\n\003pbi\030\010 \001(\014\022-\n\006custom\030\t "
    "\003(\0132\035.wind.utils.pwt.CustomMessage\"/\n\017In"
    "stanceMessage\022\014\n\004head\030\001 \001(\014\022\016\n\006custom\030\002 "
    "\001(\014\"@\n\nPWTMessage\022\016\n\006header\030\001 \001(\014\022\017\n\007pay"
    "load\030\002 \001(\014\022\021\n\tsignature\030\003 \001(\014\"+\n\rCustomM"
    "essage\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014b\006prot"
    "o3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_pwt_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_pwt_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_pwt_2eproto = {
    false,
    false,
    602,
    descriptor_table_protodef_pwt_2eproto,
    "pwt.proto",
    &descriptor_table_pwt_2eproto_once,
    descriptor_table_pwt_2eproto_deps,
    1,
    5,
    schemas,
    file_default_instances,
    TableStruct_pwt_2eproto::offsets,
    file_level_metadata_pwt_2eproto,
    file_level_enum_descriptors_pwt_2eproto,
    file_level_service_descriptors_pwt_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_pwt_2eproto_getter() {
  return &descriptor_table_pwt_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_pwt_2eproto(&descriptor_table_pwt_2eproto);
namespace wind {
namespace utils {
namespace pwt {
// ===================================================================

class HeaderMessage::_Internal {
 public:
};

HeaderMessage::HeaderMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:wind.utils.pwt.HeaderMessage)
}
HeaderMessage::HeaderMessage(const HeaderMessage& from) : ::google::protobuf::Message() {
  HeaderMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.custom_){from._impl_.custom_},
      decltype(_impl_.typ_){},
      decltype(_impl_.kid_){},
      decltype(_impl_.pwk_){},
      decltype(_impl_.x5u_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.typ_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.typ_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_typ().empty()) {
    _this->_impl_.typ_.Set(from._internal_typ(), _this->GetArenaForAllocation());
  }
  _impl_.kid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.kid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_kid().empty()) {
    _this->_impl_.kid_.Set(from._internal_kid(), _this->GetArenaForAllocation());
  }
  _impl_.pwk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pwk_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pwk().empty()) {
    _this->_impl_.pwk_.Set(from._internal_pwk(), _this->GetArenaForAllocation());
  }
  _impl_.x5u_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.x5u_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_x5u().empty()) {
    _this->_impl_.x5u_.Set(from._internal_x5u(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:wind.utils.pwt.HeaderMessage)
}
inline void HeaderMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.custom_){arena},
      decltype(_impl_.typ_){},
      decltype(_impl_.kid_){},
      decltype(_impl_.pwk_){},
      decltype(_impl_.x5u_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.typ_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.typ_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.kid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.kid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pwk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pwk_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.x5u_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.x5u_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
HeaderMessage::~HeaderMessage() {
  // @@protoc_insertion_point(destructor:wind.utils.pwt.HeaderMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HeaderMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.custom_.~RepeatedPtrField();
  _impl_.typ_.Destroy();
  _impl_.kid_.Destroy();
  _impl_.pwk_.Destroy();
  _impl_.x5u_.Destroy();
}
void HeaderMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void HeaderMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:wind.utils.pwt.HeaderMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_custom()->Clear();
  _impl_.typ_.ClearToEmpty();
  _impl_.kid_.ClearToEmpty();
  _impl_.pwk_.ClearToEmpty();
  _impl_.x5u_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HeaderMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> HeaderMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_HeaderMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes typ = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HeaderMessage, _impl_.typ_)}},
    // bytes kid = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HeaderMessage, _impl_.kid_)}},
    // bytes pwk = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HeaderMessage, _impl_.pwk_)}},
    // bytes x5u = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(HeaderMessage, _impl_.x5u_)}},
    // repeated .wind.utils.pwt.CustomMessage custom = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(HeaderMessage, _impl_.custom_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes typ = 1;
    {PROTOBUF_FIELD_OFFSET(HeaderMessage, _impl_.typ_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes kid = 2;
    {PROTOBUF_FIELD_OFFSET(HeaderMessage, _impl_.kid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes pwk = 3;
    {PROTOBUF_FIELD_OFFSET(HeaderMessage, _impl_.pwk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes x5u = 4;
    {PROTOBUF_FIELD_OFFSET(HeaderMessage, _impl_.x5u_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .wind.utils.pwt.CustomMessage custom = 5;
    {PROTOBUF_FIELD_OFFSET(HeaderMessage, _impl_.custom_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::wind::utils::pwt::CustomMessage>()},
  }}, {{
  }},
};

::uint8_t* HeaderMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wind.utils.pwt.HeaderMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes typ = 1;
  if (!this->_internal_typ().empty()) {
    const std::string& _s = this->_internal_typ();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes kid = 2;
  if (!this->_internal_kid().empty()) {
    const std::string& _s = this->_internal_kid();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // bytes pwk = 3;
  if (!this->_internal_pwk().empty()) {
    const std::string& _s = this->_internal_pwk();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // bytes x5u = 4;
  if (!this->_internal_x5u().empty()) {
    const std::string& _s = this->_internal_x5u();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // repeated .wind.utils.pwt.CustomMessage custom = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_custom_size()); i < n; i++) {
    const auto& repfield = this->_internal_custom().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wind.utils.pwt.HeaderMessage)
  return target;
}

::size_t HeaderMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wind.utils.pwt.HeaderMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .wind.utils.pwt.CustomMessage custom = 5;
  total_size += 1UL * this->_internal_custom_size();
  for (const auto& msg : this->_internal_custom()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes typ = 1;
  if (!this->_internal_typ().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_typ());
  }

  // bytes kid = 2;
  if (!this->_internal_kid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_kid());
  }

  // bytes pwk = 3;
  if (!this->_internal_pwk().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_pwk());
  }

  // bytes x5u = 4;
  if (!this->_internal_x5u().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_x5u());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HeaderMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    HeaderMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*HeaderMessage::GetClassData() const { return &_class_data_; }


void HeaderMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HeaderMessage*>(&to_msg);
  auto& from = static_cast<const HeaderMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wind.utils.pwt.HeaderMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_custom()->MergeFrom(from._internal_custom());
  if (!from._internal_typ().empty()) {
    _this->_internal_set_typ(from._internal_typ());
  }
  if (!from._internal_kid().empty()) {
    _this->_internal_set_kid(from._internal_kid());
  }
  if (!from._internal_pwk().empty()) {
    _this->_internal_set_pwk(from._internal_pwk());
  }
  if (!from._internal_x5u().empty()) {
    _this->_internal_set_x5u(from._internal_x5u());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeaderMessage::CopyFrom(const HeaderMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wind.utils.pwt.HeaderMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HeaderMessage::IsInitialized() const {
  return true;
}

void HeaderMessage::InternalSwap(HeaderMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.custom_.InternalSwap(&other->_impl_.custom_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.typ_, lhs_arena,
                                       &other->_impl_.typ_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.kid_, lhs_arena,
                                       &other->_impl_.kid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pwk_, lhs_arena,
                                       &other->_impl_.pwk_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.x5u_, lhs_arena,
                                       &other->_impl_.x5u_, rhs_arena);
}

::google::protobuf::Metadata HeaderMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pwt_2eproto_getter, &descriptor_table_pwt_2eproto_once,
      file_level_metadata_pwt_2eproto[0]);
}
// ===================================================================

class PayloadMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<PayloadMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& exp(const PayloadMessage* msg);
  static void set_has_exp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& nbf(const PayloadMessage* msg);
  static void set_has_nbf(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::Timestamp& iat(const PayloadMessage* msg);
  static void set_has_iat(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::google::protobuf::Timestamp& PayloadMessage::_Internal::exp(const PayloadMessage* msg) {
  return *msg->_impl_.exp_;
}
const ::google::protobuf::Timestamp& PayloadMessage::_Internal::nbf(const PayloadMessage* msg) {
  return *msg->_impl_.nbf_;
}
const ::google::protobuf::Timestamp& PayloadMessage::_Internal::iat(const PayloadMessage* msg) {
  return *msg->_impl_.iat_;
}
void PayloadMessage::clear_exp() {
  if (_impl_.exp_ != nullptr) _impl_.exp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PayloadMessage::clear_nbf() {
  if (_impl_.nbf_ != nullptr) _impl_.nbf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void PayloadMessage::clear_iat() {
  if (_impl_.iat_ != nullptr) _impl_.iat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
PayloadMessage::PayloadMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:wind.utils.pwt.PayloadMessage)
}
PayloadMessage::PayloadMessage(const PayloadMessage& from) : ::google::protobuf::Message() {
  PayloadMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.aud_vec_){from._impl_.aud_vec_},
      decltype(_impl_.custom_){from._impl_.custom_},
      decltype(_impl_.sub_){},
      decltype(_impl_.iss_){},
      decltype(_impl_.aud_){},
      decltype(_impl_.pbi_){},
      decltype(_impl_.exp_){nullptr},
      decltype(_impl_.nbf_){nullptr},
      decltype(_impl_.iat_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.sub_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sub_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sub().empty()) {
    _this->_impl_.sub_.Set(from._internal_sub(), _this->GetArenaForAllocation());
  }
  _impl_.iss_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.iss_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_iss().empty()) {
    _this->_impl_.iss_.Set(from._internal_iss(), _this->GetArenaForAllocation());
  }
  _impl_.aud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.aud_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_aud().empty()) {
    _this->_impl_.aud_.Set(from._internal_aud(), _this->GetArenaForAllocation());
  }
  _impl_.pbi_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pbi_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pbi().empty()) {
    _this->_impl_.pbi_.Set(from._internal_pbi(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.exp_ = new ::google::protobuf::Timestamp(*from._impl_.exp_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.nbf_ = new ::google::protobuf::Timestamp(*from._impl_.nbf_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.iat_ = new ::google::protobuf::Timestamp(*from._impl_.iat_);
  }

  // @@protoc_insertion_point(copy_constructor:wind.utils.pwt.PayloadMessage)
}
inline void PayloadMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.aud_vec_){arena},
      decltype(_impl_.custom_){arena},
      decltype(_impl_.sub_){},
      decltype(_impl_.iss_){},
      decltype(_impl_.aud_){},
      decltype(_impl_.pbi_){},
      decltype(_impl_.exp_){nullptr},
      decltype(_impl_.nbf_){nullptr},
      decltype(_impl_.iat_){nullptr},
  };
  _impl_.sub_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sub_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.iss_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.iss_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.aud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.aud_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pbi_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pbi_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PayloadMessage::~PayloadMessage() {
  // @@protoc_insertion_point(destructor:wind.utils.pwt.PayloadMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayloadMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_aud_vec()->~RepeatedPtrField();
  _impl_.custom_.~RepeatedPtrField();
  _impl_.sub_.Destroy();
  _impl_.iss_.Destroy();
  _impl_.aud_.Destroy();
  _impl_.pbi_.Destroy();
  if (this != internal_default_instance()) delete _impl_.exp_;
  if (this != internal_default_instance()) delete _impl_.nbf_;
  if (this != internal_default_instance()) delete _impl_.iat_;
}
void PayloadMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PayloadMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:wind.utils.pwt.PayloadMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_aud_vec()->Clear();
  _internal_mutable_custom()->Clear();
  _impl_.sub_.ClearToEmpty();
  _impl_.iss_.ClearToEmpty();
  _impl_.aud_.ClearToEmpty();
  _impl_.pbi_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.exp_ != nullptr);
      _impl_.exp_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.nbf_ != nullptr);
      _impl_.nbf_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.iat_ != nullptr);
      _impl_.iat_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayloadMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 4, 53, 2> PayloadMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PayloadMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes sub = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.sub_)}},
    // bytes iss = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.iss_)}},
    // bytes aud = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.aud_)}},
    // repeated string aud_vec = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.aud_vec_)}},
    // .google.protobuf.Timestamp exp = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.exp_)}},
    // .google.protobuf.Timestamp nbf = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.nbf_)}},
    // .google.protobuf.Timestamp iat = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.iat_)}},
    // bytes pbi = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.pbi_)}},
    // repeated .wind.utils.pwt.CustomMessage custom = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 3, PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.custom_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes sub = 1;
    {PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.sub_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes iss = 2;
    {PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.iss_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes aud = 3;
    {PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.aud_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated string aud_vec = 4;
    {PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.aud_vec_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .google.protobuf.Timestamp exp = 5;
    {PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.exp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp nbf = 6;
    {PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.nbf_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp iat = 7;
    {PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.iat_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes pbi = 8;
    {PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.pbi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .wind.utils.pwt.CustomMessage custom = 9;
    {PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.custom_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::wind::utils::pwt::CustomMessage>()},
  }}, {{
    "\35\0\0\0\7\0\0\0\0\0\0\0\0\0\0\0"
    "wind.utils.pwt.PayloadMessage"
    "aud_vec"
  }},
};

::uint8_t* PayloadMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wind.utils.pwt.PayloadMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes sub = 1;
  if (!this->_internal_sub().empty()) {
    const std::string& _s = this->_internal_sub();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes iss = 2;
  if (!this->_internal_iss().empty()) {
    const std::string& _s = this->_internal_iss();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // bytes aud = 3;
  if (!this->_internal_aud().empty()) {
    const std::string& _s = this->_internal_aud();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // repeated string aud_vec = 4;
  for (int i = 0, n = this->_internal_aud_vec_size(); i < n; ++i) {
    const auto& s = this->_internal_aud_vec().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "wind.utils.pwt.PayloadMessage.aud_vec");
    target = stream->WriteString(4, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp exp = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::exp(this),
        _Internal::exp(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp nbf = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::nbf(this),
        _Internal::nbf(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp iat = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::iat(this),
        _Internal::iat(this).GetCachedSize(), target, stream);
  }

  // bytes pbi = 8;
  if (!this->_internal_pbi().empty()) {
    const std::string& _s = this->_internal_pbi();
    target = stream->WriteBytesMaybeAliased(8, _s, target);
  }

  // repeated .wind.utils.pwt.CustomMessage custom = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_custom_size()); i < n; i++) {
    const auto& repfield = this->_internal_custom().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wind.utils.pwt.PayloadMessage)
  return target;
}

::size_t PayloadMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wind.utils.pwt.PayloadMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string aud_vec = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_aud_vec().size());
  for (int i = 0, n = _internal_aud_vec().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_aud_vec().Get(i));
  }
  // repeated .wind.utils.pwt.CustomMessage custom = 9;
  total_size += 1UL * this->_internal_custom_size();
  for (const auto& msg : this->_internal_custom()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes sub = 1;
  if (!this->_internal_sub().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_sub());
  }

  // bytes iss = 2;
  if (!this->_internal_iss().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_iss());
  }

  // bytes aud = 3;
  if (!this->_internal_aud().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_aud());
  }

  // bytes pbi = 8;
  if (!this->_internal_pbi().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_pbi());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .google.protobuf.Timestamp exp = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.exp_);
    }

    // .google.protobuf.Timestamp nbf = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.nbf_);
    }

    // .google.protobuf.Timestamp iat = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.iat_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayloadMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PayloadMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*PayloadMessage::GetClassData() const { return &_class_data_; }


void PayloadMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayloadMessage*>(&to_msg);
  auto& from = static_cast<const PayloadMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wind.utils.pwt.PayloadMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_aud_vec()->MergeFrom(from._internal_aud_vec());
  _this->_internal_mutable_custom()->MergeFrom(from._internal_custom());
  if (!from._internal_sub().empty()) {
    _this->_internal_set_sub(from._internal_sub());
  }
  if (!from._internal_iss().empty()) {
    _this->_internal_set_iss(from._internal_iss());
  }
  if (!from._internal_aud().empty()) {
    _this->_internal_set_aud(from._internal_aud());
  }
  if (!from._internal_pbi().empty()) {
    _this->_internal_set_pbi(from._internal_pbi());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_exp()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_exp());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nbf()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_nbf());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_iat()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_iat());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayloadMessage::CopyFrom(const PayloadMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wind.utils.pwt.PayloadMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayloadMessage::IsInitialized() const {
  return true;
}

void PayloadMessage::InternalSwap(PayloadMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.aud_vec_.InternalSwap(&other->_impl_.aud_vec_);
  _impl_.custom_.InternalSwap(&other->_impl_.custom_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sub_, lhs_arena,
                                       &other->_impl_.sub_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.iss_, lhs_arena,
                                       &other->_impl_.iss_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.aud_, lhs_arena,
                                       &other->_impl_.aud_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pbi_, lhs_arena,
                                       &other->_impl_.pbi_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.iat_)
      + sizeof(PayloadMessage::_impl_.iat_)
      - PROTOBUF_FIELD_OFFSET(PayloadMessage, _impl_.exp_)>(
          reinterpret_cast<char*>(&_impl_.exp_),
          reinterpret_cast<char*>(&other->_impl_.exp_));
}

::google::protobuf::Metadata PayloadMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pwt_2eproto_getter, &descriptor_table_pwt_2eproto_once,
      file_level_metadata_pwt_2eproto[1]);
}
// ===================================================================

class InstanceMessage::_Internal {
 public:
};

InstanceMessage::InstanceMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:wind.utils.pwt.InstanceMessage)
}
InstanceMessage::InstanceMessage(const InstanceMessage& from) : ::google::protobuf::Message() {
  InstanceMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.head_){},
      decltype(_impl_.custom_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.head_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.head_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_head().empty()) {
    _this->_impl_.head_.Set(from._internal_head(), _this->GetArenaForAllocation());
  }
  _impl_.custom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.custom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_custom().empty()) {
    _this->_impl_.custom_.Set(from._internal_custom(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:wind.utils.pwt.InstanceMessage)
}
inline void InstanceMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.head_){},
      decltype(_impl_.custom_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.head_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.head_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.custom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.custom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
InstanceMessage::~InstanceMessage() {
  // @@protoc_insertion_point(destructor:wind.utils.pwt.InstanceMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InstanceMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.head_.Destroy();
  _impl_.custom_.Destroy();
}
void InstanceMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void InstanceMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:wind.utils.pwt.InstanceMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.head_.ClearToEmpty();
  _impl_.custom_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InstanceMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> InstanceMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_InstanceMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes custom = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InstanceMessage, _impl_.custom_)}},
    // bytes head = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InstanceMessage, _impl_.head_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes head = 1;
    {PROTOBUF_FIELD_OFFSET(InstanceMessage, _impl_.head_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes custom = 2;
    {PROTOBUF_FIELD_OFFSET(InstanceMessage, _impl_.custom_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* InstanceMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wind.utils.pwt.InstanceMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes head = 1;
  if (!this->_internal_head().empty()) {
    const std::string& _s = this->_internal_head();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes custom = 2;
  if (!this->_internal_custom().empty()) {
    const std::string& _s = this->_internal_custom();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wind.utils.pwt.InstanceMessage)
  return target;
}

::size_t InstanceMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wind.utils.pwt.InstanceMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes head = 1;
  if (!this->_internal_head().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_head());
  }

  // bytes custom = 2;
  if (!this->_internal_custom().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_custom());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InstanceMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    InstanceMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*InstanceMessage::GetClassData() const { return &_class_data_; }


void InstanceMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InstanceMessage*>(&to_msg);
  auto& from = static_cast<const InstanceMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wind.utils.pwt.InstanceMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_head().empty()) {
    _this->_internal_set_head(from._internal_head());
  }
  if (!from._internal_custom().empty()) {
    _this->_internal_set_custom(from._internal_custom());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstanceMessage::CopyFrom(const InstanceMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wind.utils.pwt.InstanceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InstanceMessage::IsInitialized() const {
  return true;
}

void InstanceMessage::InternalSwap(InstanceMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.head_, lhs_arena,
                                       &other->_impl_.head_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.custom_, lhs_arena,
                                       &other->_impl_.custom_, rhs_arena);
}

::google::protobuf::Metadata InstanceMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pwt_2eproto_getter, &descriptor_table_pwt_2eproto_once,
      file_level_metadata_pwt_2eproto[2]);
}
// ===================================================================

class PWTMessage::_Internal {
 public:
};

PWTMessage::PWTMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:wind.utils.pwt.PWTMessage)
}
PWTMessage::PWTMessage(const PWTMessage& from) : ::google::protobuf::Message() {
  PWTMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){},
      decltype(_impl_.payload_){},
      decltype(_impl_.signature_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.header_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.header_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_header().empty()) {
    _this->_impl_.header_.Set(from._internal_header(), _this->GetArenaForAllocation());
  }
  _impl_.payload_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.payload_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payload().empty()) {
    _this->_impl_.payload_.Set(from._internal_payload(), _this->GetArenaForAllocation());
  }
  _impl_.signature_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.signature_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_signature().empty()) {
    _this->_impl_.signature_.Set(from._internal_signature(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:wind.utils.pwt.PWTMessage)
}
inline void PWTMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){},
      decltype(_impl_.payload_){},
      decltype(_impl_.signature_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.header_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.header_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.payload_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.payload_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.signature_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.signature_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PWTMessage::~PWTMessage() {
  // @@protoc_insertion_point(destructor:wind.utils.pwt.PWTMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PWTMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.header_.Destroy();
  _impl_.payload_.Destroy();
  _impl_.signature_.Destroy();
}
void PWTMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PWTMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:wind.utils.pwt.PWTMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.header_.ClearToEmpty();
  _impl_.payload_.ClearToEmpty();
  _impl_.signature_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PWTMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PWTMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PWTMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes header = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PWTMessage, _impl_.header_)}},
    // bytes payload = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PWTMessage, _impl_.payload_)}},
    // bytes signature = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PWTMessage, _impl_.signature_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes header = 1;
    {PROTOBUF_FIELD_OFFSET(PWTMessage, _impl_.header_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes payload = 2;
    {PROTOBUF_FIELD_OFFSET(PWTMessage, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes signature = 3;
    {PROTOBUF_FIELD_OFFSET(PWTMessage, _impl_.signature_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PWTMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wind.utils.pwt.PWTMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes header = 1;
  if (!this->_internal_header().empty()) {
    const std::string& _s = this->_internal_header();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    const std::string& _s = this->_internal_payload();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // bytes signature = 3;
  if (!this->_internal_signature().empty()) {
    const std::string& _s = this->_internal_signature();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wind.utils.pwt.PWTMessage)
  return target;
}

::size_t PWTMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wind.utils.pwt.PWTMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes header = 1;
  if (!this->_internal_header().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_header());
  }

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_payload());
  }

  // bytes signature = 3;
  if (!this->_internal_signature().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_signature());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PWTMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PWTMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*PWTMessage::GetClassData() const { return &_class_data_; }


void PWTMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PWTMessage*>(&to_msg);
  auto& from = static_cast<const PWTMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wind.utils.pwt.PWTMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_header().empty()) {
    _this->_internal_set_header(from._internal_header());
  }
  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (!from._internal_signature().empty()) {
    _this->_internal_set_signature(from._internal_signature());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PWTMessage::CopyFrom(const PWTMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wind.utils.pwt.PWTMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PWTMessage::IsInitialized() const {
  return true;
}

void PWTMessage::InternalSwap(PWTMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.header_, lhs_arena,
                                       &other->_impl_.header_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, lhs_arena,
                                       &other->_impl_.payload_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, lhs_arena,
                                       &other->_impl_.signature_, rhs_arena);
}

::google::protobuf::Metadata PWTMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pwt_2eproto_getter, &descriptor_table_pwt_2eproto_once,
      file_level_metadata_pwt_2eproto[3]);
}
// ===================================================================

class CustomMessage::_Internal {
 public:
};

CustomMessage::CustomMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:wind.utils.pwt.CustomMessage)
}
CustomMessage::CustomMessage(const CustomMessage& from) : ::google::protobuf::Message() {
  CustomMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){},
      decltype(_impl_.value_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:wind.utils.pwt.CustomMessage)
}
inline void CustomMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){},
      decltype(_impl_.value_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CustomMessage::~CustomMessage() {
  // @@protoc_insertion_point(destructor:wind.utils.pwt.CustomMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CustomMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
  _impl_.value_.Destroy();
}
void CustomMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CustomMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:wind.utils.pwt.CustomMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CustomMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CustomMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CustomMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes value = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMessage, _impl_.value_)}},
    // bytes key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMessage, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes key = 1;
    {PROTOBUF_FIELD_OFFSET(CustomMessage, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes value = 2;
    {PROTOBUF_FIELD_OFFSET(CustomMessage, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CustomMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wind.utils.pwt.CustomMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wind.utils.pwt.CustomMessage)
  return target;
}

::size_t CustomMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wind.utils.pwt.CustomMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_key());
  }

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CustomMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CustomMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*CustomMessage::GetClassData() const { return &_class_data_; }


void CustomMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CustomMessage*>(&to_msg);
  auto& from = static_cast<const CustomMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wind.utils.pwt.CustomMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMessage::CopyFrom(const CustomMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wind.utils.pwt.CustomMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CustomMessage::IsInitialized() const {
  return true;
}

void CustomMessage::InternalSwap(CustomMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, lhs_arena,
                                       &other->_impl_.key_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
}

::google::protobuf::Metadata CustomMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pwt_2eproto_getter, &descriptor_table_pwt_2eproto_once,
      file_level_metadata_pwt_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace pwt
}  // namespace utils
}  // namespace wind
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
